# This ebuild was auto-generated by homeassistant script, and the script was not able to find a better candidate.
EAPI=8

DISTUTILS_USE_PEP517=setuptools
PYTHON_COMPAT=( python3_{12,13{,t}} )
GENERATED_IUSE="all cpp-sql-parser dask duckdb ibis notebook polars ray spark sql"
IUSE="${GENERATED_IUSE}"

inherit distutils-r1 pypi

DESCRIPTION=""
HOMEPAGE="
  https://pypi.org/project/fugue/"

LICENSE="Apache-2.0"
SLOT="0"
KEYWORDS="amd64 arm64"

GENERATED_RDEPEND="${RDEPEND}
	>=dev-python/adagio-0.2.4[${PYTHON_USEDEP}]
	>=dev-python/dask-2024.4.0[dataframe,distributed,${PYTHON_USEDEP}]
	all? ( >=dev-python/dask-2023.5.0[dataframe,distributed,${PYTHON_USEDEP}] )
	dask? ( >=dev-python/dask-2023.5.0[dataframe,distributed,${PYTHON_USEDEP}] )
	all? ( dev-python/dask-sql[${PYTHON_USEDEP}] )
	all? ( >=dev-python/duckdb-0.5.0[${PYTHON_USEDEP}] )
	duckdb? ( >=dev-python/duckdb-0.5.0[${PYTHON_USEDEP}] )
	ray? ( >=dev-python/duckdb-0.5.0[${PYTHON_USEDEP}] )
	all? ( >=dev-python/fugue-sql-antlr-0.2.0[${PYTHON_USEDEP}] )
	cpp-sql-parser? ( >=dev-python/fugue-sql-antlr-0.2.0[cpp,${PYTHON_USEDEP}] )
	duckdb? ( >=dev-python/fugue-sql-antlr-0.2.0[${PYTHON_USEDEP}] )
	ibis? ( >=dev-python/fugue-sql-antlr-0.2.0[${PYTHON_USEDEP}] )
	sql? ( >=dev-python/fugue-sql-antlr-0.2.0[${PYTHON_USEDEP}] )
	all? ( dev-python/ibis-framework[${PYTHON_USEDEP}] )
	ibis? ( dev-python/ibis-framework[${PYTHON_USEDEP}] )
	all? ( >=dev-python/ipython-7.10.0[${PYTHON_USEDEP}] )
	notebook? ( >=dev-python/ipython-7.10.0[${PYTHON_USEDEP}] )
	all? ( dev-python/jinja2[${PYTHON_USEDEP}] )
	duckdb? ( dev-python/jinja2[${PYTHON_USEDEP}] )
	ibis? ( dev-python/jinja2[${PYTHON_USEDEP}] )
	sql? ( dev-python/jinja2[${PYTHON_USEDEP}] )
	all? ( dev-python/jupyterlab[${PYTHON_USEDEP}] )
	notebook? ( dev-python/jupyterlab[${PYTHON_USEDEP}] )
	all? ( dev-python/notebook[${PYTHON_USEDEP}] )
	notebook? ( dev-python/notebook[${PYTHON_USEDEP}] )
	duckdb? ( dev-python/numpy[${PYTHON_USEDEP}] )
	all? ( <dev-python/pandas-2.2[${PYTHON_USEDEP}] )
	dask? ( >=dev-python/pandas-2.0.2[${PYTHON_USEDEP}] )
	ibis? ( <dev-python/pandas-2.2[${PYTHON_USEDEP}] )
	ray? ( <dev-python/pandas-2.2[${PYTHON_USEDEP}] )
	all? ( dev-python/polars[${PYTHON_USEDEP}] )
	polars? ( dev-python/polars[${PYTHON_USEDEP}] )
	all? ( >=dev-python/pyarrow-6.0.1[${PYTHON_USEDEP}] )
	dask? ( >=dev-python/pyarrow-7.0.0[${PYTHON_USEDEP}] )
	ray? ( >=dev-python/pyarrow-7.0.0[${PYTHON_USEDEP}] )
	all? ( >=dev-python/pyspark-3.1.1[${PYTHON_USEDEP}] )
	spark? ( >=dev-python/pyspark-3.1.1[${PYTHON_USEDEP}] )
	all? ( >=dev-python/qpd-0.4.4[${PYTHON_USEDEP}] )
	duckdb? ( >=dev-python/qpd-0.4.4[${PYTHON_USEDEP}] )
	ibis? ( >=dev-python/qpd-0.4.4[${PYTHON_USEDEP}] )
	sql? ( >=dev-python/qpd-0.4.4[${PYTHON_USEDEP}] )
	all? ( >=dev-python/ray-2.5.0[data,${PYTHON_USEDEP}] )
	ray? ( >=dev-python/ray-2.5.0[data,${PYTHON_USEDEP}] )
	all? ( dev-python/sqlglot[${PYTHON_USEDEP}] )
	duckdb? ( dev-python/sqlglot[${PYTHON_USEDEP}] )
	ibis? ( dev-python/sqlglot[${PYTHON_USEDEP}] )
	sql? ( dev-python/sqlglot[${PYTHON_USEDEP}] )
	>=dev-python/triad-0.9.7[${PYTHON_USEDEP}]
"
RDEPEND="${GENERATED_RDEPEND}"

distutils_enable_tests pytest
