# This ebuild was auto-generated by homeassistant script, and the script was not able to find a better candidate.
EAPI=8

DISTUTILS_USE_PEP517=setuptools
PYTHON_COMPAT=( python3_{12,13{,t}} )
GENERATED_IUSE="aws azure gcp importers kubeflow launch media models perf sweeps workspaces"
IUSE="${GENERATED_IUSE}"

inherit distutils-r1 pypi

DESCRIPTION=""
HOMEPAGE="
  https://pypi.org/project/wandb/"

LICENSE=""
SLOT="0"
KEYWORDS="amd64 arm64"

REQUIRES_DIST="
	awscli; extra == 'launch'
	azure-containerregistry; extra == 'launch'
	azure-identity; extra == 'azure'
	azure-identity; extra == 'launch'
	azure-storage-blob; extra == 'azure'
	azure-storage-blob; extra == 'launch'
	bokeh; extra == 'media'
	boto3; extra == 'aws'
	boto3; extra == 'launch'
	botocore>=1.5.76; extra == 'aws'
	botocore>=1.5.76; extra == 'launch'
	chardet; extra == 'launch'
	click!=8.0.0,>=7.1
	cloudpickle; extra == 'models'
	docker-pycreds>=0.4.0
	eval-type-backport; python_version < '3.10'
	filelock; extra == 'importers'
	gitpython!=3.1.29,>=1.0.0
	google-auth; extra == 'launch'
	google-cloud-aiplatform; extra == 'launch'
	google-cloud-artifact-registry; extra == 'launch'
	google-cloud-compute; extra == 'launch'
	google-cloud-storage; extra == 'gcp'
	google-cloud-storage; extra == 'kubeflow'
	google-cloud-storage; extra == 'launch'
	imageio; extra == 'media'
	iso8601; extra == 'launch'
	jsonschema; extra == 'launch'
	kubernetes-asyncio; extra == 'launch'
	kubernetes; extra == 'kubeflow'
	kubernetes; extra == 'launch'
	minio; extra == 'kubeflow'
	mlflow; extra == 'importers'
	moviepy; extra == 'media'
	nbconvert; extra == 'launch'
	nbformat; extra == 'launch'
	numpy; extra == 'media'
	optuna; extra == 'launch'
	orjson; extra == 'perf'
	pillow; extra == 'media'
	platformdirs
	plotly>=5.18.0; extra == 'media'
	polars<=1.2.1; extra == 'importers'
	protobuf!=4.21.0,!=5.28.0,<6,>=3.12.0; python_version < '3.9' and sys_platform == 'linux'
	protobuf!=4.21.0,!=5.28.0,<6,>=3.15.0; python_version == '3.9' and sys_platform == 'linux'
	protobuf!=4.21.0,!=5.28.0,<6,>=3.19.0; python_version > '3.9' and sys_platform == 'linux'
	protobuf!=4.21.0,!=5.28.0,<6,>=3.19.0; sys_platform != 'linux'
	psutil>=5.0.0
	pydantic; extra == 'launch'
	pydantic<3,>=2.6
	pyyaml
	pyyaml>=6.0.0; extra == 'launch'
	rdkit; extra == 'media'
	requests<3,>=2.0.0
	rich; extra == 'importers'
	sentry-sdk>=2.0.0
	setproctitle
	setuptools
	sh; extra == 'kubeflow'
	soundfile; extra == 'media'
	sweeps>=0.2.0; extra == 'sweeps'
	tenacity; extra == 'importers'
	tomli; extra == 'launch'
	typing-extensions; extra == 'launch'
	typing-extensions<5,>=4.4; python_version < '3.12'
	wandb-workspaces; extra == 'workspaces'
"
GENERATED_RDEPEND="${RDEPEND}
	launch? ( dev-python/awscli[${PYTHON_USEDEP}] )
	launch? ( dev-python/azure-containerregistry[${PYTHON_USEDEP}] )
	azure? ( dev-python/azure-identity[${PYTHON_USEDEP}] )
	launch? ( dev-python/azure-identity[${PYTHON_USEDEP}] )
	azure? ( dev-python/azure-storage-blob[${PYTHON_USEDEP}] )
	launch? ( dev-python/azure-storage-blob[${PYTHON_USEDEP}] )
	media? ( dev-python/bokeh[${PYTHON_USEDEP}] )
	aws? ( dev-python/boto3[${PYTHON_USEDEP}] )
	launch? ( dev-python/boto3[${PYTHON_USEDEP}] )
	aws? ( >=dev-python/botocore-1.5.76[${PYTHON_USEDEP}] )
	launch? ( >=dev-python/botocore-1.5.76[${PYTHON_USEDEP}] )
	launch? ( dev-python/chardet[${PYTHON_USEDEP}] )
	>=dev-python/click-7.1[${PYTHON_USEDEP}] !~dev-python/click-8.0.0[${PYTHON_USEDEP}]
	models? ( dev-python/cloudpickle[${PYTHON_USEDEP}] )
	>=dev-python/docker-pycreds-0.4.0[${PYTHON_USEDEP}]
	importers? ( dev-python/filelock[${PYTHON_USEDEP}] )
	>=dev-python/gitpython-1.0.0[${PYTHON_USEDEP}] !~dev-python/gitpython-3.1.29[${PYTHON_USEDEP}]
	launch? ( dev-python/google-auth[${PYTHON_USEDEP}] )
	launch? ( dev-python/google-cloud-aiplatform[${PYTHON_USEDEP}] )
	launch? ( dev-python/google-cloud-artifact-registry[${PYTHON_USEDEP}] )
	launch? ( dev-python/google-cloud-compute[${PYTHON_USEDEP}] )
	gcp? ( dev-python/google-cloud-storage[${PYTHON_USEDEP}] )
	kubeflow? ( dev-python/google-cloud-storage[${PYTHON_USEDEP}] )
	launch? ( dev-python/google-cloud-storage[${PYTHON_USEDEP}] )
	media? ( dev-python/imageio[${PYTHON_USEDEP}] )
	launch? ( dev-python/iso8601[${PYTHON_USEDEP}] )
	launch? ( dev-python/jsonschema[${PYTHON_USEDEP}] )
	kubeflow? ( dev-python/kubernetes[${PYTHON_USEDEP}] )
	launch? ( dev-python/kubernetes[${PYTHON_USEDEP}] )
	launch? ( dev-python/kubernetes-asyncio[${PYTHON_USEDEP}] )
	kubeflow? ( dev-python/minio[${PYTHON_USEDEP}] )
	importers? ( dev-python/mlflow[${PYTHON_USEDEP}] )
	media? ( dev-python/moviepy[${PYTHON_USEDEP}] )
	launch? ( dev-python/nbconvert[${PYTHON_USEDEP}] )
	launch? ( dev-python/nbformat[${PYTHON_USEDEP}] )
	media? ( dev-python/numpy[${PYTHON_USEDEP}] )
	launch? ( dev-python/optuna[${PYTHON_USEDEP}] )
	perf? ( dev-python/orjson[${PYTHON_USEDEP}] )
	media? ( dev-python/pillow[${PYTHON_USEDEP}] )
	dev-python/platformdirs[${PYTHON_USEDEP}]
	media? ( >=dev-python/plotly-5.18.0[${PYTHON_USEDEP}] )
	importers? ( <=dev-python/polars-1.2.1[${PYTHON_USEDEP}] )
	>=dev-python/protobuf-3.19.0[${PYTHON_USEDEP}] <dev-python/protobuf-6[${PYTHON_USEDEP}] !~dev-python/protobuf-4.21.0[${PYTHON_USEDEP}] !~dev-python/protobuf-5.28.0[${PYTHON_USEDEP}]
	>=dev-python/psutil-5.0.0[${PYTHON_USEDEP}]
	>=dev-python/pydantic-2.6[${PYTHON_USEDEP}] <dev-python/pydantic-3[${PYTHON_USEDEP}]
	launch? ( dev-python/pydantic[${PYTHON_USEDEP}] )
	dev-python/pyyaml[${PYTHON_USEDEP}]
	launch? ( >=dev-python/pyyaml-6.0.0[${PYTHON_USEDEP}] )
	media? ( dev-python/rdkit[${PYTHON_USEDEP}] )
	>=dev-python/requests-2.0.0[${PYTHON_USEDEP}] <dev-python/requests-3[${PYTHON_USEDEP}]
	importers? ( dev-python/rich[${PYTHON_USEDEP}] )
	>=dev-python/sentry-sdk-2.0.0[${PYTHON_USEDEP}]
	dev-python/setproctitle[${PYTHON_USEDEP}]
	dev-python/setuptools[${PYTHON_USEDEP}]
	kubeflow? ( dev-python/sh[${PYTHON_USEDEP}] )
	media? ( dev-python/soundfile[${PYTHON_USEDEP}] )
	sweeps? ( >=dev-python/sweeps-0.2.0[${PYTHON_USEDEP}] )
	importers? ( dev-python/tenacity[${PYTHON_USEDEP}] )
	launch? ( dev-python/tomli[${PYTHON_USEDEP}] )
	launch? ( dev-python/typing-extensions[${PYTHON_USEDEP}] )
	workspaces? ( dev-python/wandb-workspaces[${PYTHON_USEDEP}] )
"
RDEPEND="${GENERATED_RDEPEND}"

distutils_enable_tests pytest
