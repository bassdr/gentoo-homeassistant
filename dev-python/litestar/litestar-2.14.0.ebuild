# This ebuild was auto-generated by homeassistant script, and the script was not able to find a better candidate.
EAPI=8

DISTUTILS_USE_PEP517=setuptools
PYTHON_COMPAT=( python3_{12,13{,t}} )
PYPI_NO_NORMALIZE=1
GENERATED_IUSE="annotated-types attrs brotli cli cryptography full jinja jwt mako minijinja opentelemetry piccolo prometheus pydantic redis sqlalchemy standard structlog valkey"
IUSE="${GENERATED_IUSE}"

inherit distutils-r1 pypi

DESCRIPTION=""
HOMEPAGE="
  https://pypi.org/project/litestar/"

LICENSE="MIT"
SLOT="0"
KEYWORDS="amd64 arm64"

GENERATED_DEPEND="${PYTHON_DEPS}
	full? ( >=dev-python/advanced-alchemy-0.2.2[${PYTHON_USEDEP}] )
	sqlalchemy? ( >=dev-python/advanced-alchemy-0.2.2[${PYTHON_USEDEP}] )
	annotated-types? ( dev-python/annotated-types[${PYTHON_USEDEP}] )
	full? ( dev-python/annotated-types[${PYTHON_USEDEP}] )
	>=dev-python/anyio-3[${PYTHON_USEDEP}]
	attrs? ( dev-python/attrs[${PYTHON_USEDEP}] )
	full? ( dev-python/attrs[${PYTHON_USEDEP}] )
	brotli? ( dev-python/brotli[${PYTHON_USEDEP}] )
	full? ( dev-python/brotli[${PYTHON_USEDEP}] )
	dev-python/click[${PYTHON_USEDEP}]
	cryptography? ( dev-python/cryptography[${PYTHON_USEDEP}] )
	full? ( dev-python/cryptography[${PYTHON_USEDEP}] )
	jwt? ( dev-python/cryptography[${PYTHON_USEDEP}] )
	full? ( dev-python/email-validator[${PYTHON_USEDEP}] )
	pydantic? ( dev-python/email-validator[${PYTHON_USEDEP}] )
	full? ( >=dev-python/fast-query-parsers-1.0.2[${PYTHON_USEDEP}] )
	standard? ( >=dev-python/fast-query-parsers-1.0.2[${PYTHON_USEDEP}] )
	>=dev-python/httpx-0.22[${PYTHON_USEDEP}]
	>=dev-python/importlib-resources-5.12.0[${PYTHON_USEDEP}]
	full? ( >=dev-python/jinja2-3.1.2[${PYTHON_USEDEP}] )
	full? ( dev-python/jinja2[${PYTHON_USEDEP}] )
	jinja? ( >=dev-python/jinja2-3.1.2[${PYTHON_USEDEP}] )
	standard? ( dev-python/jinja2[${PYTHON_USEDEP}] )
	cli? ( dev-python/jsbeautifier[${PYTHON_USEDEP}] )
	full? ( dev-python/jsbeautifier[${PYTHON_USEDEP}] )
	standard? ( dev-python/jsbeautifier[${PYTHON_USEDEP}] )
	>=dev-python/litestar-htmx-0.4.0[${PYTHON_USEDEP}]
	full? ( >=dev-python/mako-1.2.4[${PYTHON_USEDEP}] )
	mako? ( >=dev-python/mako-1.2.4[${PYTHON_USEDEP}] )
	full? ( >=dev-python/minijinja-1.0.0[${PYTHON_USEDEP}] )
	minijinja? ( >=dev-python/minijinja-1.0.0[${PYTHON_USEDEP}] )
	>=dev-python/msgspec-0.18.2[${PYTHON_USEDEP}]
	>=dev-python/multidict-6.0.2[${PYTHON_USEDEP}]
	>=dev-python/multipart-1.2.0[${PYTHON_USEDEP}]
	full? ( dev-python/opentelemetry-instrumentation-asgi[${PYTHON_USEDEP}] )
	opentelemetry? ( dev-python/opentelemetry-instrumentation-asgi[${PYTHON_USEDEP}] )
	full? ( dev-python/piccolo[${PYTHON_USEDEP}] )
	piccolo? ( dev-python/piccolo[${PYTHON_USEDEP}] )
	dev-python/picologging[${PYTHON_USEDEP}]
	dev-python/picologging[${PYTHON_USEDEP}]
	>=dev-python/polyfactory-2.6.3[${PYTHON_USEDEP}]
	full? ( dev-python/prometheus-client[${PYTHON_USEDEP}] )
	prometheus? ( dev-python/prometheus-client[${PYTHON_USEDEP}] )
	full? ( dev-python/pydantic[${PYTHON_USEDEP}] )
	pydantic? ( dev-python/pydantic[${PYTHON_USEDEP}] )
	!=dev-python/pydantic-extra-types-2.9.0[${PYTHON_USEDEP}]
	!=dev-python/pydantic-extra-types-2.9.0[${PYTHON_USEDEP}]
	full? ( >=dev-python/pyjwt-2.9.0[${PYTHON_USEDEP}] )
	jwt? ( >=dev-python/pyjwt-2.9.0[${PYTHON_USEDEP}] )
	dev-python/pyyaml[${PYTHON_USEDEP}]
	full? ( >=dev-python/redis-4.4.4[hiredis,${PYTHON_USEDEP}] )
	redis? ( >=dev-python/redis-4.4.4[hiredis,${PYTHON_USEDEP}] )
	>=dev-python/rich-13.0.0[${PYTHON_USEDEP}]
	dev-python/rich-click[${PYTHON_USEDEP}]
	full? ( dev-python/structlog[${PYTHON_USEDEP}] )
	structlog? ( dev-python/structlog[${PYTHON_USEDEP}] )
	dev-python/typing-extensions[${PYTHON_USEDEP}]
	cli? ( dev-python/uvicorn[standard,${PYTHON_USEDEP}] )
	full? ( dev-python/uvicorn[standard,${PYTHON_USEDEP}] )
	standard? ( dev-python/uvicorn[standard,${PYTHON_USEDEP}] )
	full? ( >=dev-python/valkey-6.0.2[libvalkey,${PYTHON_USEDEP}] )
	valkey? ( >=dev-python/valkey-6.0.2[libvalkey,${PYTHON_USEDEP}] )
"
RDEPEND="${GENERATED_DEPEND}"

distutils_enable_tests pytest
