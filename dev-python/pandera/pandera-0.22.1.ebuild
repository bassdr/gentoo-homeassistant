# This ebuild was auto-generated by homeassistant script, and the script was not able to find a better candidate.
EAPI=8

DISTUTILS_USE_PEP517=setuptools
PYTHON_COMPAT=( python3_{12,13{,t}} )
GENERATED_IUSE="all dask fastapi geopandas hypotheses io modin modin-dask modin-ray mypy polars pyspark strategies"
IUSE="${GENERATED_IUSE}"

inherit distutils-r1 pypi

DESCRIPTION=""
HOMEPAGE="
  https://pypi.org/project/pandera/"

LICENSE="MIT"
SLOT="0"
KEYWORDS="amd64 arm64"

REQUIRES_DIST="
	black; extra == 'all'
	black; extra == 'io'
	dask[dataframe]; extra == 'all'
	dask[dataframe]; extra == 'dask'
	dask[dataframe]; extra == 'modin'
	dask[dataframe]; extra == 'modin-dask'
	fastapi; extra == 'all'
	fastapi; extra == 'fastapi'
	frictionless<=4.40.8; extra == 'all'
	frictionless<=4.40.8; extra == 'io'
	geopandas; extra == 'all'
	geopandas; extra == 'geopandas'
	hypothesis>=6.92.7; extra == 'all'
	hypothesis>=6.92.7; extra == 'strategies'
	modin; extra == 'all'
	modin; extra == 'modin'
	modin; extra == 'modin-dask'
	modin; extra == 'modin-ray'
	numpy>=1.19.0
	packaging>=20.0
	pandas-stubs; extra == 'all'
	pandas-stubs; extra == 'mypy'
	pandas>=1.2.0
	polars>=0.20.0; extra == 'all'
	polars>=0.20.0; extra == 'polars'
	pydantic
	pyspark[connect]>=3.2.0; extra == 'all'
	pyspark[connect]>=3.2.0; extra == 'pyspark'
	pyyaml>=5.1; extra == 'all'
	pyyaml>=5.1; extra == 'io'
	ray; extra == 'all'
	ray; extra == 'modin'
	ray; extra == 'modin-ray'
	scipy; extra == 'all'
	scipy; extra == 'hypotheses'
	shapely; extra == 'all'
	shapely; extra == 'geopandas'
	typeguard
	typing_extensions>=3.7.4.3; python_version < '3.8'
	typing_inspect>=0.6.0
"
GENERATED_RDEPEND="${RDEPEND}
	all? ( dev-python/black[${PYTHON_USEDEP}] )
	io? ( dev-python/black[${PYTHON_USEDEP}] )
	all? ( dev-python/dask[dataframe,${PYTHON_USEDEP}] )
	dask? ( dev-python/dask[dataframe,${PYTHON_USEDEP}] )
	modin-dask? ( dev-python/dask[dataframe,${PYTHON_USEDEP}] )
	modin? ( dev-python/dask[dataframe,${PYTHON_USEDEP}] )
	all? ( dev-python/fastapi[${PYTHON_USEDEP}] )
	fastapi? ( dev-python/fastapi[${PYTHON_USEDEP}] )
	all? ( <=dev-python/frictionless-4.40.8[${PYTHON_USEDEP}] )
	io? ( <=dev-python/frictionless-4.40.8[${PYTHON_USEDEP}] )
	all? ( dev-python/geopandas[${PYTHON_USEDEP}] )
	geopandas? ( dev-python/geopandas[${PYTHON_USEDEP}] )
	all? ( >=dev-python/hypothesis-6.92.7[${PYTHON_USEDEP}] )
	strategies? ( >=dev-python/hypothesis-6.92.7[${PYTHON_USEDEP}] )
	all? ( dev-python/modin[${PYTHON_USEDEP}] )
	modin-dask? ( dev-python/modin[${PYTHON_USEDEP}] )
	modin-ray? ( dev-python/modin[${PYTHON_USEDEP}] )
	modin? ( dev-python/modin[${PYTHON_USEDEP}] )
	>=dev-python/numpy-1.19.0[${PYTHON_USEDEP}]
	>=dev-python/packaging-20.0[${PYTHON_USEDEP}]
	>=dev-python/pandas-1.2.0[${PYTHON_USEDEP}]
	all? ( dev-python/pandas-stubs[${PYTHON_USEDEP}] )
	mypy? ( dev-python/pandas-stubs[${PYTHON_USEDEP}] )
	all? ( >=dev-python/polars-0.20.0[${PYTHON_USEDEP}] )
	polars? ( >=dev-python/polars-0.20.0[${PYTHON_USEDEP}] )
	dev-python/pydantic[${PYTHON_USEDEP}]
	all? ( >=dev-python/pyspark-3.2.0[connect,${PYTHON_USEDEP}] )
	pyspark? ( >=dev-python/pyspark-3.2.0[connect,${PYTHON_USEDEP}] )
	all? ( >=dev-python/pyyaml-5.1[${PYTHON_USEDEP}] )
	io? ( >=dev-python/pyyaml-5.1[${PYTHON_USEDEP}] )
	all? ( dev-python/ray[${PYTHON_USEDEP}] )
	modin-ray? ( dev-python/ray[${PYTHON_USEDEP}] )
	modin? ( dev-python/ray[${PYTHON_USEDEP}] )
	all? ( dev-python/scipy[${PYTHON_USEDEP}] )
	hypotheses? ( dev-python/scipy[${PYTHON_USEDEP}] )
	all? ( dev-python/shapely[${PYTHON_USEDEP}] )
	geopandas? ( dev-python/shapely[${PYTHON_USEDEP}] )
	dev-python/typeguard[${PYTHON_USEDEP}]
	>=dev-python/typing-inspect-0.6.0[${PYTHON_USEDEP}]
"
RDEPEND="${GENERATED_RDEPEND}"

distutils_enable_tests pytest
