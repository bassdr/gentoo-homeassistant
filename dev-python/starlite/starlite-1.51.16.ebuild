# This ebuild was auto-generated by homeassistant script, and the script was not able to find a better candidate.
EAPI=8

DISTUTILS_USE_PEP517=setuptools
PYTHON_COMPAT=( python3_{12,13{,t}} )
GENERATED_IUSE="brotli cli cryptography full jinja jwt memcached opentelemetry picologging redis standard structlog"
IUSE="${GENERATED_IUSE}"

inherit distutils-r1 pypi

DESCRIPTION=""
HOMEPAGE="
  https://pypi.org/project/starlite/"

LICENSE="MIT"
SLOT="0"
KEYWORDS="amd64 arm64"

REQUIRES_DIST="
	aiomcache; extra == 'memcached' or extra == 'full'
	anyio<4,>=3
	brotli; extra == 'brotli' or extra == 'full'
	click; extra == 'cli' or extra == 'standard' or extra == 'full'
	cryptography; extra == 'cryptography' or extra == 'jwt' or extra == 'full'
	fast-query-parsers
	httpx>=0.22
	importlib-metadata; python_version < '3.10'
	jinja2>=3.1.2; extra == 'jinja' or extra == 'standard' or extra == 'full'
	jsbeautifier; extra == 'cli' or extra == 'standard'
	mako>=1.2.4
	msgspec>=0.11.0
	multidict>=6.0.2
	opentelemetry-instrumentation-asgi; extra == 'opentelemetry' or extra == 'full'
	picologging; extra == 'picologging' or extra == 'standard' or extra == 'full'
	pydantic-factories
	pydantic-openapi-schema>=1.5.0
	pydantic<2
	python-jose; extra == 'jwt' or extra == 'full'
	pyyaml
	redis[hiredis]; extra == 'redis' or extra == 'full'
	rich>=13.0.0; extra == 'cli' or extra == 'standard' or extra == 'full'
	structlog; extra == 'structlog' or extra == 'full'
	typing-extensions
"
GENERATED_RDEPEND="${RDEPEND}
	full? ( dev-python/aiomcache[${PYTHON_USEDEP}] ) memcached? ( dev-python/aiomcache[${PYTHON_USEDEP}] )
	>=dev-python/anyio-3[${PYTHON_USEDEP}] <dev-python/anyio-4[${PYTHON_USEDEP}]
	brotli? ( app-arch/brotli[python,${PYTHON_USEDEP}] ) full? ( app-arch/brotli[python,${PYTHON_USEDEP}] )
	full? ( dev-python/click[${PYTHON_USEDEP}] ) cli? ( dev-python/click[${PYTHON_USEDEP}] ) standard? ( dev-python/click[${PYTHON_USEDEP}] )
	full? ( dev-python/cryptography[${PYTHON_USEDEP}] ) jwt? ( dev-python/cryptography[${PYTHON_USEDEP}] ) cryptography? ( dev-python/cryptography[${PYTHON_USEDEP}] )
	dev-python/fast-query-parsers[${PYTHON_USEDEP}]
	>=dev-python/httpx-0.22[${PYTHON_USEDEP}]
	standard? ( >=dev-python/jinja2-3.1.2[${PYTHON_USEDEP}] ) jinja? ( >=dev-python/jinja2-3.1.2[${PYTHON_USEDEP}] ) full? ( >=dev-python/jinja2-3.1.2[${PYTHON_USEDEP}] )
	standard? ( dev-python/jsbeautifier[${PYTHON_USEDEP}] ) cli? ( dev-python/jsbeautifier[${PYTHON_USEDEP}] )
	>=dev-python/mako-1.2.4[${PYTHON_USEDEP}]
	>=dev-python/msgspec-0.11.0[${PYTHON_USEDEP}]
	>=dev-python/multidict-6.0.2[${PYTHON_USEDEP}]
	full? ( dev-python/opentelemetry-instrumentation-asgi[${PYTHON_USEDEP}] ) opentelemetry? ( dev-python/opentelemetry-instrumentation-asgi[${PYTHON_USEDEP}] )
	full? ( dev-python/picologging[${PYTHON_USEDEP}] ) picologging? ( dev-python/picologging[${PYTHON_USEDEP}] ) standard? ( dev-python/picologging[${PYTHON_USEDEP}] )
	<dev-python/pydantic-2[${PYTHON_USEDEP}]
	dev-python/pydantic-factories[${PYTHON_USEDEP}]
	>=dev-python/pydantic-openapi-schema-1.5.0[${PYTHON_USEDEP}]
	jwt? ( dev-python/python-jose[${PYTHON_USEDEP}] ) full? ( dev-python/python-jose[${PYTHON_USEDEP}] )
	dev-python/pyyaml[${PYTHON_USEDEP}]
	full? ( dev-python/redis[hiredis,${PYTHON_USEDEP}] ) redis? ( dev-python/redis[hiredis,${PYTHON_USEDEP}] )
	cli? ( >=dev-python/rich-13.0.0[${PYTHON_USEDEP}] ) full? ( >=dev-python/rich-13.0.0[${PYTHON_USEDEP}] ) standard? ( >=dev-python/rich-13.0.0[${PYTHON_USEDEP}] )
	structlog? ( dev-python/structlog[${PYTHON_USEDEP}] ) full? ( dev-python/structlog[${PYTHON_USEDEP}] )
	dev-python/typing-extensions[${PYTHON_USEDEP}]
"
RDEPEND="${GENERATED_RDEPEND}"

distutils_enable_tests pytest
