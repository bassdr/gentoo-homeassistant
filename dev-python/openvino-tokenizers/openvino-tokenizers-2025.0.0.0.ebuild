# This ebuild was auto-generated by homeassistant script, and the script was not able to find a better candidate.
EAPI=8

DISTUTILS_USE_PEP517=setuptools
PYTHON_COMPAT=( python3_{12,13{,t}} )
GENERATED_IUSE="all benchmark fuzzing torch transformers"
IUSE="${GENERATED_IUSE}"

inherit distutils-r1 pypi

DESCRIPTION=""
HOMEPAGE="
  https://pypi.org/project/openvino-tokenizers/"

LICENSE=""
SLOT="0"
KEYWORDS="amd64 arm64"

REQUIRES_DIST="
	atheris; extra == "fuzzing"
	bandit; extra == "dev"
	openvino_tokenizers[dev,transformers]; extra == "all"
	openvino_tokenizers[torch,transformers]; extra == "dev"
	openvino_tokenizers[transformers]; extra == "benchmark"
	openvino_tokenizers[transformers]; extra == "fuzzing"
	openvino~=2025.0.0.dev
	pandas; extra == "benchmark"
	pandas; extra == "dev"
	pytest; extra == "dev"
	pytest_harvest; extra == "dev"
	ruff; extra == "dev"
	seaborn; extra == "benchmark"
	tiktoken; extra == "transformers"
	torch; extra == "torch"
	tqdm; extra == "benchmark"
	transformers[sentencepiece]>=4.36.0; extra == "transformers"
"
GENERATED_RDEPEND="${RDEPEND}
	fuzzing? ( dev-python/atheris[${PYTHON_USEDEP}] )
	>=dev-python/openvino-2025.0.0_pre[${PYTHON_USEDEP}] =dev-python/openvino-2025.0.0*[${PYTHON_USEDEP}]
	all? ( dev-python/openvino-tokenizers[dev,transformers,${PYTHON_USEDEP}] )
	benchmark? ( dev-python/openvino-tokenizers[transformers,${PYTHON_USEDEP}] )
	fuzzing? ( dev-python/openvino-tokenizers[transformers,${PYTHON_USEDEP}] )
	benchmark? ( dev-python/pandas[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/seaborn[${PYTHON_USEDEP}] )
	transformers? ( dev-python/tiktoken[${PYTHON_USEDEP}] )
	torch? ( dev-python/torch[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	transformers? ( >=dev-python/transformers-4.36.0[sentencepiece,${PYTHON_USEDEP}] )
"
RDEPEND="${GENERATED_RDEPEND}"

distutils_enable_tests pytest
GENERATED_BDEPEND="${BDEPEND}
	test? (
		dev-python/bandit[${PYTHON_USEDEP}]
		dev-python/openvino-tokenizers[torch,transformers,${PYTHON_USEDEP}]
		dev-python/pandas[${PYTHON_USEDEP}]
		dev-python/pytest[${PYTHON_USEDEP}]
		dev-python/pytest-harvest[${PYTHON_USEDEP}]
		dev-python/ruff[${PYTHON_USEDEP}]
	)
"
BDEPEND="${GENERATED_BDEPEND}"

