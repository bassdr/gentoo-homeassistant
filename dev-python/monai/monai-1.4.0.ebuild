# This ebuild was auto-generated by homeassistant script, and the script was not able to find a better candidate.
EAPI=8

DISTUTILS_USE_PEP517=setuptools
PYTHON_COMPAT=( python3_{12,13{,t}} )
GENERATED_IUSE="all clearml cucim einops fire gdown h5py huggingface-hub ignite imagecodecs itk jsonschema lmdb lpips matplotlib mlflow nibabel ninja nni onnx openslide optuna packaging pandas pillow polygraphy psutil pyamg pydicom pynrrd pynvml pyyaml scipy skimage tensorboard tensorboardx tifffile torchvision tqdm zarr"
IUSE="${GENERATED_IUSE}"

inherit distutils-r1 pypi

DESCRIPTION=""
HOMEPAGE="
  https://pypi.org/project/monai/"

LICENSE=""
SLOT="0"
KEYWORDS="amd64 arm64"

REQUIRES_DIST="
	clearml; extra == 'clearml'
	clearml>=1.10.0rc0; extra == 'all'
	cucim-cu12; (python_version >= '3.9' and python_version <= '3.10') and extra == 'all'
	cucim-cu12; extra == 'cucim'
	einops; extra == 'all'
	einops; extra == 'einops'
	fire; extra == 'all'
	fire; extra == 'fire'
	gdown>=4.7.3; extra == 'all'
	gdown>=4.7.3; extra == 'gdown'
	h5py; extra == 'all'
	h5py; extra == 'h5py'
	huggingface-hub; extra == 'all'
	huggingface-hub; extra == 'huggingface-hub'
	imagecodecs; extra == 'all'
	imagecodecs; extra == 'imagecodecs'
	itk>=5.2; extra == 'all'
	itk>=5.2; extra == 'itk'
	jsonschema; extra == 'all'
	jsonschema; extra == 'jsonschema'
	lmdb; extra == 'all'
	lmdb; extra == 'lmdb'
	lpips==0.1.4; extra == 'all'
	lpips==0.1.4; extra == 'lpips'
	matplotlib>=3.6.3; extra == 'all'
	matplotlib>=3.6.3; extra == 'matplotlib'
	mlflow>=2.12.2; extra == 'all'
	mlflow>=2.12.2; extra == 'mlflow'
	nibabel; extra == 'all'
	nibabel; extra == 'nibabel'
	ninja; extra == 'all'
	ninja; extra == 'ninja'
	nni; extra == 'all'
	nni; extra == 'nni'
	numpy<2.0,>=1.24
	nvidia-ml-py; extra == 'all'
	nvidia-ml-py; extra == 'pynvml'
	onnx>=1.13.0; extra == 'all'
	onnx>=1.13.0; extra == 'onnx'
	onnxruntime; python_version <= '3.10' and extra == 'all'
	onnxruntime; python_version <= '3.10' and extra == 'onnx'
	openslide-python; extra == 'all'
	openslide-python; extra == 'openslide'
	optuna; extra == 'all'
	optuna; extra == 'optuna'
	packaging; extra == 'packaging'
	pandas; extra == 'all'
	pandas; extra == 'pandas'
	pillow!=8.3.0; extra == 'pillow'
	pillow; extra == 'all'
	polygraphy; extra == 'polygraphy'
	psutil; extra == 'all'
	psutil; extra == 'psutil'
	pyamg>=5.0.0; extra == 'all'
	pyamg>=5.0.0; extra == 'pyamg'
	pydicom; extra == 'all'
	pydicom; extra == 'pydicom'
	pynrrd; extra == 'all'
	pynrrd; extra == 'pynrrd'
	pytorch-ignite==0.4.11; extra == 'all'
	pytorch-ignite==0.4.11; extra == 'ignite'
	pyyaml; extra == 'all'
	pyyaml; extra == 'pyyaml'
	scikit-image>=0.14.2; extra == 'all'
	scikit-image>=0.14.2; extra == 'skimage'
	scipy>=1.12.0; python_version >= '3.9' and extra == 'all'
	scipy>=1.12.0; python_version >= '3.9' and extra == 'scipy'
	tensorboard; extra == 'all'
	tensorboard; extra == 'tensorboard'
	tensorboardX; extra == 'all'
	tensorboardX; extra == 'tensorboardx'
	tifffile; extra == 'all'
	tifffile; extra == 'tifffile'
	torch>=1.9
	torchvision; extra == 'all'
	torchvision; extra == 'torchvision'
	tqdm>=4.47.0; extra == 'all'
	tqdm>=4.47.0; extra == 'tqdm'
	transformers<4.41.0,>=4.36.0; python_version <= '3.10' and extra == 'all'
	transformers<4.41.0,>=4.36.0; python_version <= '3.10' and extra == 'transformers'
	zarr; extra == 'all'
	zarr; extra == 'zarr'
"
GENERATED_RDEPEND="${RDEPEND}
	all? ( >=dev-python/clearml-1.10.0_rc0[${PYTHON_USEDEP}] )
	clearml? ( dev-python/clearml[${PYTHON_USEDEP}] )
	cucim? ( dev-python/cucim-cu12[${PYTHON_USEDEP}] )
	all? ( dev-python/einops[${PYTHON_USEDEP}] )
	einops? ( dev-python/einops[${PYTHON_USEDEP}] )
	all? ( dev-python/fire[${PYTHON_USEDEP}] )
	fire? ( dev-python/fire[${PYTHON_USEDEP}] )
	all? ( >=dev-python/gdown-4.7.3[${PYTHON_USEDEP}] )
	gdown? ( >=dev-python/gdown-4.7.3[${PYTHON_USEDEP}] )
	all? ( dev-python/h5py[${PYTHON_USEDEP}] )
	h5py? ( dev-python/h5py[${PYTHON_USEDEP}] )
	all? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	huggingface-hub? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	all? ( dev-python/imagecodecs[${PYTHON_USEDEP}] )
	imagecodecs? ( dev-python/imagecodecs[${PYTHON_USEDEP}] )
	all? ( >=dev-python/itk-5.2[${PYTHON_USEDEP}] )
	itk? ( >=dev-python/itk-5.2[${PYTHON_USEDEP}] )
	all? ( dev-python/jsonschema[${PYTHON_USEDEP}] )
	jsonschema? ( dev-python/jsonschema[${PYTHON_USEDEP}] )
	all? ( dev-python/lmdb[${PYTHON_USEDEP}] )
	lmdb? ( dev-python/lmdb[${PYTHON_USEDEP}] )
	all? ( ~dev-python/lpips-0.1.4[${PYTHON_USEDEP}] )
	lpips? ( ~dev-python/lpips-0.1.4[${PYTHON_USEDEP}] )
	all? ( >=dev-python/matplotlib-3.6.3[${PYTHON_USEDEP}] )
	matplotlib? ( >=dev-python/matplotlib-3.6.3[${PYTHON_USEDEP}] )
	all? ( >=dev-python/mlflow-2.12.2[${PYTHON_USEDEP}] )
	mlflow? ( >=dev-python/mlflow-2.12.2[${PYTHON_USEDEP}] )
	all? ( dev-python/nibabel[${PYTHON_USEDEP}] )
	nibabel? ( dev-python/nibabel[${PYTHON_USEDEP}] )
	all? ( dev-python/ninja[${PYTHON_USEDEP}] )
	ninja? ( dev-python/ninja[${PYTHON_USEDEP}] )
	all? ( dev-python/nni[${PYTHON_USEDEP}] )
	nni? ( dev-python/nni[${PYTHON_USEDEP}] )
	>=dev-python/numpy-1.24[${PYTHON_USEDEP}] <dev-python/numpy-2.0[${PYTHON_USEDEP}]
	all? ( dev-python/nvidia-ml-py[${PYTHON_USEDEP}] )
	pynvml? ( dev-python/nvidia-ml-py[${PYTHON_USEDEP}] )
	all? ( >=dev-python/onnx-1.13.0[${PYTHON_USEDEP}] )
	onnx? ( >=dev-python/onnx-1.13.0[${PYTHON_USEDEP}] )
	all? ( dev-python/openslide-python[${PYTHON_USEDEP}] )
	openslide? ( dev-python/openslide-python[${PYTHON_USEDEP}] )
	all? ( dev-python/optuna[${PYTHON_USEDEP}] )
	optuna? ( dev-python/optuna[${PYTHON_USEDEP}] )
	packaging? ( dev-python/packaging[${PYTHON_USEDEP}] )
	all? ( dev-python/pandas[${PYTHON_USEDEP}] )
	pandas? ( dev-python/pandas[${PYTHON_USEDEP}] )
	all? ( dev-python/pillow[${PYTHON_USEDEP}] )
	pillow? ( !~dev-python/pillow-8.3.0[${PYTHON_USEDEP}] )
	polygraphy? ( dev-python/polygraphy[${PYTHON_USEDEP}] )
	all? ( dev-python/psutil[${PYTHON_USEDEP}] )
	psutil? ( dev-python/psutil[${PYTHON_USEDEP}] )
	all? ( >=dev-python/pyamg-5.0.0[${PYTHON_USEDEP}] )
	pyamg? ( >=dev-python/pyamg-5.0.0[${PYTHON_USEDEP}] )
	all? ( dev-python/pydicom[${PYTHON_USEDEP}] )
	pydicom? ( dev-python/pydicom[${PYTHON_USEDEP}] )
	all? ( dev-python/pynrrd[${PYTHON_USEDEP}] )
	pynrrd? ( dev-python/pynrrd[${PYTHON_USEDEP}] )
	all? ( ~dev-python/pytorch-ignite-0.4.11[${PYTHON_USEDEP}] )
	ignite? ( ~dev-python/pytorch-ignite-0.4.11[${PYTHON_USEDEP}] )
	all? ( dev-python/pyyaml[${PYTHON_USEDEP}] )
	pyyaml? ( dev-python/pyyaml[${PYTHON_USEDEP}] )
	all? ( >=dev-python/scikit-image-0.14.2[${PYTHON_USEDEP}] )
	skimage? ( >=dev-python/scikit-image-0.14.2[${PYTHON_USEDEP}] )
	all? ( >=dev-python/scipy-1.12.0[${PYTHON_USEDEP}] )
	scipy? ( >=dev-python/scipy-1.12.0[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	tensorboard? ( dev-python/tensorboard[${PYTHON_USEDEP}] )
	all? ( dev-python/tensorboardx[${PYTHON_USEDEP}] )
	tensorboardx? ( dev-python/tensorboardx[${PYTHON_USEDEP}] )
	all? ( dev-python/tifffile[${PYTHON_USEDEP}] )
	tifffile? ( dev-python/tifffile[${PYTHON_USEDEP}] )
	>=dev-python/torch-1.9[${PYTHON_USEDEP}]
	all? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	torchvision? ( dev-python/torchvision[${PYTHON_USEDEP}] )
	all? ( >=dev-python/tqdm-4.47.0[${PYTHON_USEDEP}] )
	tqdm? ( >=dev-python/tqdm-4.47.0[${PYTHON_USEDEP}] )
	all? ( dev-python/zarr[${PYTHON_USEDEP}] )
	zarr? ( dev-python/zarr[${PYTHON_USEDEP}] )
"
RDEPEND="${GENERATED_RDEPEND}"

distutils_enable_tests pytest

