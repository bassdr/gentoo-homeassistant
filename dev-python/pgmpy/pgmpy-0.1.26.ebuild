# This ebuild was auto-generated by homeassistant script, and the script was not able to find a better candidate.
EAPI=8

DISTUTILS_USE_PEP517=setuptools
PYTHON_COMPAT=( python3_{12,13{,t}} )
GENERATED_IUSE="all"
IUSE="${GENERATED_IUSE}"

inherit distutils-r1 pypi

DESCRIPTION=""
HOMEPAGE="
  https://pypi.org/project/pgmpy/"

LICENSE="MIT"
SLOT="0"
KEYWORDS="amd64 arm64"

REQUIRES_DIST="
	black; extra == "all"
	black; extra == "tests"
	coverage; extra == "all"
	coverage; extra == "tests"
	daft; extra == "all"
	google-generativeai
	google-generativeai; extra == "all"
	joblib
	joblib; extra == "all"
	mock; extra == "all"
	mock; extra == "tests"
	networkx
	networkx; extra == "all"
	numpy
	numpy; extra == "all"
	opt-einsum
	opt-einsum; extra == "all"
	pandas
	pandas; extra == "all"
	pre-commit; extra == "all"
	pre-commit; extra == "tests"
	pyparsing
	pyparsing; extra == "all"
	pytest-cov; extra == "all"
	pytest-cov; extra == "tests"
	pytest; extra == "all"
	pytest; extra == "tests"
	scikit-learn
	scikit-learn; extra == "all"
	scipy
	scipy; extra == "all"
	statsmodels
	statsmodels; extra == "all"
	torch
	torch; extra == "all"
	tqdm
	tqdm; extra == "all"
	xdoctest; extra == "all"
	xdoctest; extra == "tests"
	xgboost
	xgboost; extra == "all"
"
GENERATED_RDEPEND="${RDEPEND}
	all? ( dev-python/black[${PYTHON_USEDEP}] )
	all? ( dev-python/coverage[${PYTHON_USEDEP}] )
	all? ( dev-python/daft[${PYTHON_USEDEP}] )
	all? ( dev-python/google-generativeai[${PYTHON_USEDEP}] )
	dev-python/google-generativeai[${PYTHON_USEDEP}]
	all? ( dev-python/joblib[${PYTHON_USEDEP}] )
	dev-python/joblib[${PYTHON_USEDEP}]
	all? ( dev-python/mock[${PYTHON_USEDEP}] )
	all? ( dev-python/networkx[${PYTHON_USEDEP}] )
	dev-python/networkx[${PYTHON_USEDEP}]
	all? ( dev-python/numpy[${PYTHON_USEDEP}] )
	dev-python/numpy[${PYTHON_USEDEP}]
	all? ( dev-python/opt-einsum[${PYTHON_USEDEP}] )
	dev-python/opt-einsum[${PYTHON_USEDEP}]
	all? ( dev-python/pandas[${PYTHON_USEDEP}] )
	dev-python/pandas[${PYTHON_USEDEP}]
	all? ( dev-python/pyparsing[${PYTHON_USEDEP}] )
	dev-python/pyparsing[${PYTHON_USEDEP}]
	all? ( dev-python/pytest[${PYTHON_USEDEP}] )
	all? ( dev-python/pytest-cov[${PYTHON_USEDEP}] )
	all? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	dev-python/scikit-learn[${PYTHON_USEDEP}]
	all? ( dev-python/scipy[${PYTHON_USEDEP}] )
	dev-python/scipy[${PYTHON_USEDEP}]
	all? ( dev-python/statsmodels[${PYTHON_USEDEP}] )
	dev-python/statsmodels[${PYTHON_USEDEP}]
	all? ( dev-python/torch[${PYTHON_USEDEP}] )
	dev-python/torch[${PYTHON_USEDEP}]
	all? ( dev-python/tqdm[${PYTHON_USEDEP}] )
	dev-python/tqdm[${PYTHON_USEDEP}]
	all? ( dev-python/xdoctest[${PYTHON_USEDEP}] )
	all? ( dev-python/xgboost[${PYTHON_USEDEP}] )
	dev-python/xgboost[${PYTHON_USEDEP}]
	all? ( dev-vcs/pre-commit[${PYTHON_USEDEP}] )
"
RDEPEND="${GENERATED_RDEPEND}"

distutils_enable_tests pytest
GENERATED_BDEPEND="${BDEPEND}
	test? (
		dev-python/black[${PYTHON_USEDEP}]
		dev-python/coverage[${PYTHON_USEDEP}]
		dev-python/mock[${PYTHON_USEDEP}]
		dev-python/pytest[${PYTHON_USEDEP}]
		dev-python/pytest-cov[${PYTHON_USEDEP}]
		dev-python/xdoctest[${PYTHON_USEDEP}]
		dev-vcs/pre-commit[${PYTHON_USEDEP}]
	)
"
BDEPEND="${GENERATED_BDEPEND}"
