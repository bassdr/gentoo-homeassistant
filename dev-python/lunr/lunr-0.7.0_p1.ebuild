# This ebuild was auto-generated by homeassistant script, and the script was not able to find a better candidate.
EAPI=8

DISTUTILS_USE_PEP517=setuptools
PYTHON_COMPAT=( python3_{12,13{,t}} )
GENERATED_IUSE="docs languages local test"
IUSE="${GENERATED_IUSE}"

inherit distutils-r1 pypi
SRC_URI="$(pypi_sdist_url ${PN} 0.7.0.post1)"
S="${WORKDIR}/$(pypi_normalize_name ${PN})-0.7.0.post1"

DESCRIPTION=""
HOMEPAGE="
  https://pypi.org/project/lunr/"

LICENSE="MIT"
SLOT="0"
KEYWORDS="amd64 arm64"

REQUIRES_DIST="
	black; extra == 'local'
	build; extra == 'local'
	coverage; extra == 'tests'
	flake8; extra == 'local'
	furo; extra == 'docs'
	hatch-fancy-pypi-readme; extra == 'local'
	importlib-metadata; python_version < '3.8'
	ipython; extra == 'local'
	lunr[docs,local,tests]; extra == 'dev'
	lunr[languages]; extra == 'tests'
	mypy; extra == 'local'
	myst-parser; extra == 'docs'
	nltk; extra == 'languages'
	pdbpp; extra == 'local'
	pytest-benchmark; extra == 'local'
	pytest-timeout; extra == 'tests'
	pytest; extra == 'tests'
	sphinx-autobuild; extra == 'docs'
	sphinx; extra == 'docs'
	tox; extra == 'tests'
	twine; extra == 'local'
	typing-extensions; python_version < '3.8'
	wheel; extra == 'local'
"
GENERATED_RDEPEND="${RDEPEND}
	local? ( dev-python/black[${PYTHON_USEDEP}] )
	local? ( dev-python/build[${PYTHON_USEDEP}] )
	local? ( dev-python/flake8[${PYTHON_USEDEP}] )
	docs? ( dev-python/furo[${PYTHON_USEDEP}] )
	local? ( dev-python/hatch-fancy-pypi-readme[${PYTHON_USEDEP}] )
	local? ( dev-python/ipython[${PYTHON_USEDEP}] )
	local? ( dev-python/mypy[${PYTHON_USEDEP}] )
	docs? ( dev-python/myst-parser[${PYTHON_USEDEP}] )
	languages? ( dev-python/nltk[${PYTHON_USEDEP}] )
	local? ( dev-python/pdbpp[${PYTHON_USEDEP}] )
	local? ( dev-python/pytest-benchmark[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx[${PYTHON_USEDEP}] )
	docs? ( dev-python/sphinx-autobuild[${PYTHON_USEDEP}] )
	local? ( dev-python/twine[${PYTHON_USEDEP}] )
	local? ( dev-python/wheel[${PYTHON_USEDEP}] )
"
RDEPEND="${GENERATED_RDEPEND}"

distutils_enable_tests pytest
GENERATED_BDEPEND="${BDEPEND}
	test? (
		dev-python/coverage[${PYTHON_USEDEP}]
		dev-python/lunr[docs,local,tests,${PYTHON_USEDEP}]
		dev-python/lunr[languages,${PYTHON_USEDEP}]
		dev-python/pytest[${PYTHON_USEDEP}]
		dev-python/pytest-timeout[${PYTHON_USEDEP}]
		dev-python/tox[${PYTHON_USEDEP}]
	)
"
BDEPEND="${GENERATED_BDEPEND}"
