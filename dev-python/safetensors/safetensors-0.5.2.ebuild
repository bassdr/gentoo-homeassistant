# This ebuild was auto-generated by homeassistant script, and the script was not able to find a better candidate.
EAPI=8

DISTUTILS_USE_PEP517=setuptools
PYTHON_COMPAT=( python3_{12,13{,t}} )
GENERATED_IUSE="all jax mlx numpy paddlepaddle pinned-tf quality tensorflow torch"
IUSE="${GENERATED_IUSE}"

inherit distutils-r1 pypi

DESCRIPTION=""
HOMEPAGE="
  https://pypi.org/project/safetensors/"

LICENSE=""
SLOT="0"
KEYWORDS="amd64 arm64"

REQUIRES_DIST="
	black==22.3; extra == 'quality'
	click==8.0.4; extra == 'quality'
	flake8>=3.8.3; extra == 'quality'
	flax>=0.6.3; extra == 'jax'
	h5py>=3.7.0; extra == 'testing'
	huggingface-hub>=0.12.1; extra == 'testing'
	hypothesis>=6.70.2; extra == 'testing'
	isort>=5.5.4; extra == 'quality'
	jax>=0.3.25; extra == 'jax'
	jaxlib>=0.3.25; extra == 'jax'
	mlx>=0.0.9; extra == 'mlx'
	numpy>=1.21.6; extra == 'numpy'
	paddlepaddle>=2.4.1; extra == 'paddlepaddle'
	pytest-benchmark>=4.0.0; extra == 'testing'
	pytest>=7.2.0; extra == 'testing'
	safetensors[all]; extra == 'dev'
	safetensors[jax]; extra == 'all'
	safetensors[numpy]; extra == 'all'
	safetensors[numpy]; extra == 'jax'
	safetensors[numpy]; extra == 'paddlepaddle'
	safetensors[numpy]; extra == 'pinned-tf'
	safetensors[numpy]; extra == 'tensorflow'
	safetensors[numpy]; extra == 'testing'
	safetensors[numpy]; extra == 'torch'
	safetensors[paddlepaddle]; extra == 'all'
	safetensors[pinned-tf]; extra == 'all'
	safetensors[quality]; extra == 'all'
	safetensors[testing]; extra == 'all'
	safetensors[torch]; extra == 'all'
	setuptools-rust>=1.5.2; extra == 'testing'
	tensorflow==2.18.0; extra == 'pinned-tf'
	tensorflow>=2.11.0; extra == 'tensorflow'
	torch>=1.10; extra == 'torch'
"
GENERATED_RDEPEND="${RDEPEND}
	quality? ( ~dev-python/black-22.3[${PYTHON_USEDEP}] )
	quality? ( ~dev-python/click-8.0.4[${PYTHON_USEDEP}] )
	quality? ( >=dev-python/flake8-3.8.3[${PYTHON_USEDEP}] )
	jax? ( >=dev-python/flax-0.6.3[${PYTHON_USEDEP}] )
	quality? ( >=dev-python/isort-5.5.4[${PYTHON_USEDEP}] )
	jax? ( >=dev-python/jax-0.3.25[${PYTHON_USEDEP}] )
	jax? ( >=dev-python/jaxlib-0.3.25[${PYTHON_USEDEP}] )
	mlx? ( >=dev-python/mlx-0.0.9[${PYTHON_USEDEP}] )
	numpy? ( >=dev-python/numpy-1.21.6[${PYTHON_USEDEP}] )
	paddlepaddle? ( >=dev-python/paddlepaddle-2.4.1[${PYTHON_USEDEP}] )
	all? ( dev-python/safetensors[jax,${PYTHON_USEDEP}] )
	all? ( dev-python/safetensors[numpy,${PYTHON_USEDEP}] )
	all? ( dev-python/safetensors[paddlepaddle,${PYTHON_USEDEP}] )
	all? ( dev-python/safetensors[pinned-tf,${PYTHON_USEDEP}] )
	all? ( dev-python/safetensors[quality,${PYTHON_USEDEP}] )
	all? ( dev-python/safetensors[testing,${PYTHON_USEDEP}] )
	all? ( dev-python/safetensors[torch,${PYTHON_USEDEP}] )
	jax? ( dev-python/safetensors[numpy,${PYTHON_USEDEP}] )
	paddlepaddle? ( dev-python/safetensors[numpy,${PYTHON_USEDEP}] )
	pinned-tf? ( dev-python/safetensors[numpy,${PYTHON_USEDEP}] )
	tensorflow? ( dev-python/safetensors[numpy,${PYTHON_USEDEP}] )
	torch? ( dev-python/safetensors[numpy,${PYTHON_USEDEP}] )
	pinned-tf? ( ~dev-python/tensorflow-2.18.0[${PYTHON_USEDEP}] )
	tensorflow? ( >=dev-python/tensorflow-2.11.0[${PYTHON_USEDEP}] )
	torch? ( >=dev-python/torch-1.10[${PYTHON_USEDEP}] )
"
RDEPEND="${GENERATED_RDEPEND}"

distutils_enable_tests pytest
GENERATED_BDEPEND="${BDEPEND}
	test? (
		>=dev-python/h5py-3.7.0[${PYTHON_USEDEP}]
		>=dev-python/huggingface-hub-0.12.1[${PYTHON_USEDEP}]
		>=dev-python/hypothesis-6.70.2[${PYTHON_USEDEP}]
		>=dev-python/pytest-7.2.0[${PYTHON_USEDEP}]
		>=dev-python/pytest-benchmark-4.0.0[${PYTHON_USEDEP}]
		dev-python/safetensors[all,${PYTHON_USEDEP}]
		dev-python/safetensors[numpy,${PYTHON_USEDEP}]
		>=dev-python/setuptools-rust-1.5.2[${PYTHON_USEDEP}]
	)
"
BDEPEND="${GENERATED_BDEPEND}"
