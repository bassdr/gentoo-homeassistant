# This ebuild was auto-generated by homeassistant script, and the script was not able to find a better candidate.
EAPI=8

DISTUTILS_USE_PEP517=setuptools
PYTHON_COMPAT=( python3_{12,13{,t}} )
PYPI_NO_NORMALIZE=1
GENERATED_IUSE="all aws azure dask dev gcp polars ray spark"
IUSE="${GENERATED_IUSE}"

inherit distutils-r1 pypi

DESCRIPTION=""
HOMEPAGE="
  https://pypi.org/project/mlforecast/"

LICENSE=""
SLOT="0"
KEYWORDS="amd64 arm64"

GENERATED_DEPEND="
	all? ( >=dev-python/black-24[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/black-24[${PYTHON_USEDEP}] )
	dev-python/cloudpickle[${PYTHON_USEDEP}]
	>=dev-python/coreforecast-0.0.15[${PYTHON_USEDEP}]
	all? ( dev-python/dask[complete,${PYTHON_USEDEP}] )
	dask? ( dev-python/dask[complete,${PYTHON_USEDEP}] )
	all? ( >=dev-python/datasetsforecast-1[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/datasetsforecast-1[${PYTHON_USEDEP}] )
	all? ( dev-python/fsspec[adl,${PYTHON_USEDEP}] )
	all? ( dev-python/fsspec[gcs,${PYTHON_USEDEP}] )
	all? ( dev-python/fsspec[s3,${PYTHON_USEDEP}] )
	aws? ( dev-python/fsspec[s3,${PYTHON_USEDEP}] )
	azure? ( dev-python/fsspec[adl,${PYTHON_USEDEP}] )
	dev-python/fsspec[${PYTHON_USEDEP}]
	gcp? ( dev-python/fsspec[gcs,${PYTHON_USEDEP}] )
	all? ( dev-python/fugue[${PYTHON_USEDEP}] )
	all? ( dev-python/fugue[ray,${PYTHON_USEDEP}] )
	dask? ( dev-python/fugue[${PYTHON_USEDEP}] )
	ray? ( dev-python/fugue[ray,${PYTHON_USEDEP}] )
	spark? ( dev-python/fugue[${PYTHON_USEDEP}] )
	all? ( dev-python/gitpython[${PYTHON_USEDEP}] )
	dev? ( dev-python/gitpython[${PYTHON_USEDEP}] )
	all? ( <dev-python/holidays-0.21[${PYTHON_USEDEP}] )
	dev? ( <dev-python/holidays-0.21[${PYTHON_USEDEP}] )
	all? ( dev-python/lightgbm[${PYTHON_USEDEP}] )
	dask? ( dev-python/lightgbm[${PYTHON_USEDEP}] )
	dev? ( dev-python/lightgbm[${PYTHON_USEDEP}] )
	spark? ( dev-python/lightgbm[${PYTHON_USEDEP}] )
	all? ( dev-python/lightgbm-ray[${PYTHON_USEDEP}] )
	ray? ( dev-python/lightgbm-ray[${PYTHON_USEDEP}] )
	all? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	dev? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	all? ( >=dev-python/mlflow-2.10.0[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/mlflow-2.10.0[${PYTHON_USEDEP}] )
	all? ( dev-python/mypy[${PYTHON_USEDEP}] )
	dev? ( dev-python/mypy[${PYTHON_USEDEP}] )
	all? ( <dev-python/nbdev-2.3.26[${PYTHON_USEDEP}] )
	dev? ( <dev-python/nbdev-2.3.26[${PYTHON_USEDEP}] )
	all? ( >=dev-python/numpy-2[${PYTHON_USEDEP}] )
	dev? ( >=dev-python/numpy-2[${PYTHON_USEDEP}] )
	dev-python/optuna[${PYTHON_USEDEP}]
	all? ( >=dev-python/pandas-2.2.2[${PYTHON_USEDEP}] )
	dev-python/pandas[${PYTHON_USEDEP}]
	dev? ( >=dev-python/pandas-2.2.2[${PYTHON_USEDEP}] )
	all? ( dev-python/polars[numpy,${PYTHON_USEDEP}] )
	dev? ( dev-python/polars[numpy,${PYTHON_USEDEP}] )
	polars? ( dev-python/polars[numpy,${PYTHON_USEDEP}] )
	all? ( dev-python/pyarrow[${PYTHON_USEDEP}] )
	dev? ( dev-python/pyarrow[${PYTHON_USEDEP}] )
	all? ( >=dev-python/pyspark-3.3[${PYTHON_USEDEP}] )
	spark? ( >=dev-python/pyspark-3.3[${PYTHON_USEDEP}] )
	all? ( dev-python/ruff[${PYTHON_USEDEP}] )
	dev? ( dev-python/ruff[${PYTHON_USEDEP}] )
	dev-python/scikit-learn[${PYTHON_USEDEP}]
	all? ( dev-python/setuptools[${PYTHON_USEDEP}] )
	dev? ( dev-python/setuptools[${PYTHON_USEDEP}] )
	all? ( dev-python/statsmodels[${PYTHON_USEDEP}] )
	dev? ( dev-python/statsmodels[${PYTHON_USEDEP}] )
	>=dev-python/utilsforecast-0.2.9[${PYTHON_USEDEP}]
	all? ( dev-python/xgboost[${PYTHON_USEDEP}] )
	dask? ( dev-python/xgboost[${PYTHON_USEDEP}] )
	dev? ( dev-python/xgboost[${PYTHON_USEDEP}] )
	spark? ( dev-python/xgboost[${PYTHON_USEDEP}] )
	all? ( dev-python/xgboost-ray[${PYTHON_USEDEP}] )
	ray? ( dev-python/xgboost-ray[${PYTHON_USEDEP}] )
	all? ( dev-vcs/pre-commit[${PYTHON_USEDEP}] )
	dev? ( dev-vcs/pre-commit[${PYTHON_USEDEP}] )
"
RDEPEND="${GENERATED_DEPEND}"

distutils_enable_tests pytest