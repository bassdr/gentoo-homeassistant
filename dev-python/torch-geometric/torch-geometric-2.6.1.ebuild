# This ebuild was auto-generated by homeassistant script, and the script was not able to find a better candidate.
EAPI=8

DISTUTILS_USE_PEP517=setuptools
PYTHON_COMPAT=( python3_{12,13{,t}} )
GENERATED_IUSE="benchmark full graphgym modelhub"
IUSE="${GENERATED_IUSE}"

inherit distutils-r1 pypi

DESCRIPTION=""
HOMEPAGE="
  https://pypi.org/project/torch-geometric/"

LICENSE=""
SLOT="0"
KEYWORDS="amd64 arm64"

REQUIRES_DIST="
	aiohttp
	ase; extra == "full"
	captum<0.7.0; extra == "full"
	fsspec
	graphviz; extra == "full"
	h5py; extra == "full"
	huggingface_hub; extra == "modelhub"
	ipython; extra == "dev"
	jinja2
	matplotlib-inline; extra == "dev"
	matplotlib; extra == "benchmark"
	matplotlib; extra == "full"
	networkx; extra == "benchmark"
	networkx; extra == "full"
	numba<0.60.0; extra == "full"
	numpy
	onnx; extra == "test"
	onnxruntime; extra == "test"
	opt_einsum; extra == "full"
	pandas; extra == "benchmark"
	pandas; extra == "full"
	pgmpy; extra == "full"
	pre-commit; extra == "dev"
	protobuf<4.21; extra == "benchmark"
	protobuf<4.21; extra == "graphgym"
	psutil>=5.8.0
	pynndescent; extra == "full"
	pyparsing
	pytest-cov; extra == "test"
	pytest; extra == "test"
	pytorch-lightning<2.3.0; extra == "graphgym"
	pytorch-memlab; extra == "full"
	rdflib; extra == "full"
	rdkit; extra == "full"
	requests
	scikit-image; extra == "full"
	scikit-learn; extra == "full"
	scipy; extra == "full"
	statsmodels; extra == "full"
	sympy; extra == "full"
	tabulate; extra == "full"
	torch_geometric[graphgym,modelhub]; extra == "full"
	torch_geometric[test]; extra == "dev"
	torchmetrics; extra == "full"
	tqdm
	trimesh; extra == "full"
	wandb; extra == "benchmark"
	yacs; extra == "graphgym"
"
GENERATED_RDEPEND="${RDEPEND}
	dev-python/aiohttp[${PYTHON_USEDEP}]
	full? ( dev-python/ase[${PYTHON_USEDEP}] )
	full? ( <dev-python/captum-0.7.0[${PYTHON_USEDEP}] )
	dev-python/fsspec[${PYTHON_USEDEP}]
	full? ( dev-python/graphviz[${PYTHON_USEDEP}] )
	full? ( dev-python/h5py[${PYTHON_USEDEP}] )
	modelhub? ( dev-python/huggingface-hub[${PYTHON_USEDEP}] )
	dev-python/jinja2[${PYTHON_USEDEP}]
	benchmark? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	full? ( dev-python/matplotlib[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/networkx[${PYTHON_USEDEP}] )
	full? ( dev-python/networkx[${PYTHON_USEDEP}] )
	full? ( <dev-python/numba-0.60.0[${PYTHON_USEDEP}] )
	dev-python/numpy[${PYTHON_USEDEP}]
	full? ( dev-python/opt-einsum[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/pandas[${PYTHON_USEDEP}] )
	full? ( dev-python/pandas[${PYTHON_USEDEP}] )
	full? ( dev-python/pgmpy[${PYTHON_USEDEP}] )
	benchmark? ( <dev-python/protobuf-4.21[${PYTHON_USEDEP}] )
	graphgym? ( <dev-python/protobuf-4.21[${PYTHON_USEDEP}] )
	>=dev-python/psutil-5.8.0[${PYTHON_USEDEP}]
	full? ( dev-python/pynndescent[${PYTHON_USEDEP}] )
	dev-python/pyparsing[${PYTHON_USEDEP}]
	graphgym? ( <dev-python/pytorch-lightning-2.3.0[${PYTHON_USEDEP}] )
	full? ( dev-python/pytorch-memlab[${PYTHON_USEDEP}] )
	full? ( dev-python/rdflib[${PYTHON_USEDEP}] )
	full? ( dev-python/rdkit[${PYTHON_USEDEP}] )
	dev-python/requests[${PYTHON_USEDEP}]
	full? ( dev-python/scikit-image[${PYTHON_USEDEP}] )
	full? ( dev-python/scikit-learn[${PYTHON_USEDEP}] )
	full? ( dev-python/scipy[${PYTHON_USEDEP}] )
	full? ( dev-python/statsmodels[${PYTHON_USEDEP}] )
	full? ( dev-python/sympy[${PYTHON_USEDEP}] )
	full? ( dev-python/tabulate[${PYTHON_USEDEP}] )
	full? ( dev-python/torch-geometric[graphgym,modelhub,${PYTHON_USEDEP}] )
	full? ( dev-python/torchmetrics[${PYTHON_USEDEP}] )
	dev-python/tqdm[${PYTHON_USEDEP}]
	full? ( dev-python/trimesh[${PYTHON_USEDEP}] )
	benchmark? ( dev-python/wandb[${PYTHON_USEDEP}] )
	graphgym? ( dev-python/yacs[${PYTHON_USEDEP}] )
"
RDEPEND="${GENERATED_RDEPEND}"

distutils_enable_tests pytest
GENERATED_BDEPEND="${BDEPEND}
	test? (
		dev-python/ipython[${PYTHON_USEDEP}]
		dev-python/matplotlib-inline[${PYTHON_USEDEP}]
		dev-python/onnx[${PYTHON_USEDEP}]
		dev-python/onnxruntime[${PYTHON_USEDEP}]
		dev-python/pytest[${PYTHON_USEDEP}]
		dev-python/pytest-cov[${PYTHON_USEDEP}]
		dev-python/torch-geometric[test,${PYTHON_USEDEP}]
		dev-vcs/pre-commit[${PYTHON_USEDEP}]
	)
"
BDEPEND="${GENERATED_BDEPEND}"
